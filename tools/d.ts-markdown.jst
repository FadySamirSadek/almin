# <%= title.replace(".d.ts", "") %>
<!-- THIS DOCUMENT IS AUTOMATICALLY GENERATED FROM src/*.ts -->
<!-- Please edit src/*.ts and `npm run build:docs:api` -->
<%
function shouldIgnoreSection(section) {
   if (/^\s*$/.test(section.docsText)) { return true; }
   if (/^\s*$/.test(section.codeText)) { return true; }
   // private method
   if (/private /.test(section.codeText)) { return true; }
   // @private
   if (/<b>private<\/b>/.test(section.docsText)) { return true; }
   // **internal** flag
   if (/\*\*internal\*\*/.test(section.docsText)) { return true; }
   if (/<reference type/.test(section.docsText)) { return true; }
   return false;
}
// Multiple line or Single Header
function renderAPIHeader(section) {
   const header = section.codeText.split("\n").map(line => line.trim()).join("\n").trim();
   if(header.split("\n").length > 1){
     return "## Interface of"
      + "```typescript\n"
      + header + "\n"
      + "```";
   }
   return "## " + header;
}
%>

```typescript
<%= sections.filter(section => !shouldIgnoreSection(section)).map(section => section.codeText).join("\n").trim() %>
```

----
<% sections.filter(section => !shouldIgnoreSection(section)).forEach(section => { %>
<%= renderAPIHeader(section) %>

<%= section.docsText %>

----
<% }) %>
